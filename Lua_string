--[[
	<String in Lua>
	1. Characters between single quotes
	2. Characters between double quotes
	3. Chareacters between double bracket

	<Escape sequence>
	\a : bell
	\b : backspace
	\f : formfeed
	\n : new line
	\r : carriage return
	\t : tab
	\v : vertical tab
	\\ : backslash
	\" : double quotes
	\' : single quotes
	\[ : left square bracket
	\] : right square bracket

	<String manipulation>
	1. string.upper(argument) : Returns capitalized argument
	2. string.lower(argument) : Returns lower case argument
	3. string.gsub(mainString, findString, replaceString) : Returns a string which "findString" is replaced to "replaceString" from mainString
	4. string.find(mainString, findString, optionalStartIndex, optionalEndIndex) : Returns start index and end index of the "findString" in the "mainString" and nil if not found
	5. string.reverse(argument) : Return reversed argument string
	6. string.format(...) : Returns formatted string
	7. string.char(argument) and string.byte(argument) : Returns internal numeric and character representations of input argument
	8. string.len(argument) : Returns length of the argument string
	9. string.rep(string, n) : Returns string by repeating the same string (n) times
	10. .. : concatenates two strings
]]--

str1 = "Lua"

print("Upper string of \"Lua\" : " .. string.upper(str1))
print("Lower string of \"Lua\" : " .. string.lower(str1))
print("")

str2 = "Lua Language"

newstr = string.gsub(str2, "Language", "Tutorial")
print("string.gsub() function test : \"" .. str2 .. "\" to \"" .. newstr .. "\"")
print("string.reverse() function : test : \"" .. newstr .. "\" to \"" .. string.reverse(newstr) .. "\"")
print("")

str3 = "format_test"
dd, mm, yy = 31, 5, 2021

print(string.format("format test [string : %s]", str3))
print(string.format("format test [date : %04d-%02d-%02d]", yy, mm, dd))
print(string.format("format test [float : %.4f]", 1/3))
print("")

print("string.byte(\"Lua\") function test : \"" .. string.byte("Lua") .. "\"")
print("string.byte(\"Lua\", 3) function test : \"" .. string.byte("Lua", 3) .. "\"")
print("string.byte(\"Lua\", -1) function test : \"" .. string.byte("Lua", -1) .. "\"")
print("string.byte(\"Lua\", 2) function test : \"" .. string.byte("Lua", 2) .. "\"")
print("string.byte(\"Lua\", -2) function test : \"" .. string.byte("Lua", -2) .. "\"")
print("string.char(97) function test \"" .. string.char(97) .. "\"")
print("")

str4, str5 = "Lua", "Tutorial"

print(".. operator test : \"" .. str4 .. str5 .. "\"")
print("string.len(\"Lua\") function test : \"" .. string.len(str4) .. "\"")
print("string.rep(\"Lua\", 3) function test : \"" .. string.rep(str4, 3) .. "\"")